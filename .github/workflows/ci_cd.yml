name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      # Docker-in-Docker service (allows Docker to be used inside a container)
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
    # 1. Check out the repository
    - name: Check out repository
      uses: actions/checkout@v4

    # 2. Set up Docker Buildx (this is needed for multi-platform builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3. Install docker-compose
    - name: Install docker-compose
      run: |
        curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Verify installation

    # 4. Build the Docker image
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag livox_driver_image:latest

    # 5. Run the tests (assumes Docker Compose is used for integration tests)
    - name: Run the tests using docker-compose
      run: |
        docker-compose -f docker-compose.yml up --abort-on-container-exit --exit-code-from test_runner
      env:
        LAUNCH_FILE: livox_hub_launch.py

    # 6. Ensure lowercase repository name
    - name: Ensure lowercase repository name
      run: |
        REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
        echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

    # 7. Upload Docker image to GitHub Container Registry
    #- name: Upload Docker image to GitHub Container Registry
    #  run: |
    #    echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    #    docker tag livox_driver_image:latest ghcr.io/${{ env.REPO_NAME }}:latest
    #    docker push ghcr.io/${{ env.REPO_NAME }}:latest

    # 8. Clean up (remove containers and images after test)
    - name: Clean up
      run: |
        docker-compose down
        docker rmi livox_driver_image:latest
